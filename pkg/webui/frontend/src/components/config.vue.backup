// <template>
//   <html>
//   <head>
//     <meta charset="utf-8">
//     <meta content="width=device-width,initial-scale=1,minimal-ui" name="viewport">
//   </head>
//   <div class="jumbotron">
//     <div class="container">
//       <div class="row">
//         <div class="col-sm-8 offset-sm-2">
//           <div>
//             <h2>Gebug Configuration</h2>
//             <form @submit.prevent="handleSubmit">
//               <ConfigInput :fieldname="moshe" />
//               <div class="input-group mb-3">
//                 <div class="input-group-prepend">
//                   <span class="input-group-text">Name</span>
//                 </div>
//                 <input type="text" class="form-control" placeholder="awesome-app"
//                        aria-label="Project Name" aria-describedby="name"
//                        :class="{ 'is-invalid': submitted && $v.config.name.$error }"
//                        v-model="config.name"/>
//                 <div v-if="submitted && !$v.config.name.required" class="invalid-feedback">Name is required</div>
//               </div>

//               <div class="input-group mb-3">
//                 <div class="input-group-prepend">
//                   <span class="input-group-text">Output Artifact</span>
//                 </div>
//                 <input type="text" class="form-control" placeholder="/app" aria-describedby="Output Artifact"
//                        :class="{ 'is-invalid': submitted && $v.config.outputBinPath.$error }"
//                        v-model="config.outputBinPath"/>
//                 <div v-if="submitted && !$v.config.outputBinPath.required" class="invalid-feedback">Output artifact path is required</div>
//               </div>

//               <div class="form-group">
//                 <label for="outputBinPath">Output Binary Path</label>
//                 <input type="text" class="form-control"
//                        :class="{ 'is-invalid': submitted && $v.config.outputBinPath.$error }"
//                        v-model="config.outputBinPath" id="outputBinPath" name="outputBinPath"/>
//                 <div v-if="submitted && !$v.config.outputBinPath.required" class="invalid-feedback">Output Binary Path
//                   is required
//                 </div>
//               </div>
//               <div class="form-group">
//                 <label for="buildCommand">Build Command</label>
//                 <input type="text" class="form-control"
//                        :class="{ 'is-invalid': submitted && $v.config.buildCommand.$error }"
//                        v-model="config.buildCommand" id="buildCommand" name="buildCommand"/>
//                 <div v-if="submitted && !$v.config.buildCommand.required" class="invalid-feedback">Build Command is
//                   required
//                 </div>
//               </div>
//               <div class="form-group">
//                 <label for="runCommand">Run Command</label>
//                 <input type="text" class="form-control"
//                        :class="{ 'is-invalid': submitted && $v.config.runCommand.$error }"
//                        v-model="config.runCommand" id="runCommand" name="runCommand" value="config.runCommand"/>
//                 <div v-if="submitted && !$v.config.runCommand.required" class="invalid-feedback">Run Command is
//                   required
//                 </div>
//               </div>
//               <div class="form-group">
//                 <label for="runtimeImage">Runtime Image</label>
//                 <input type="text" class="form-control"
//                        :class="{ 'is-invalid': submitted && $v.config.runtimeImage.$error }"
//                        v-model="config.runtimeImage" id="runtimeImage" name="runtimeImage"/>
//                 <div v-if="submitted && !$v.config.runtimeImage.required" class="invalid-feedback">Runtime Image is
//                   required
//                 </div>
//               </div>


//               <div class="form-group">
//                 <button class="btn btn-primary">Register</button>
//               </div>
//             </form>
//           </div>
//         </div>
//       </div>
//     </div>
//   </div>
//   </html>
// </template>

// <script>
// import {required} from "vuelidate/lib/validators";
// import ConfigInput from "@/components/ConfigInput";

// export default {
//   name: "app",
//   components: {ConfigInput},
//   data() {
//     return {
//       config: {
//         name: "",
//         outputBinPath: "",
//         buildCommand: "",
//         runCommand: "",
//         runtimeImage: "",
//       },
//       submitted: false
//     };
//   },
//   validations: {
//     config: {
//       name: {required},
//       outputBinPath: {required},
//       buildCommand: {required},
//       runCommand: {required},
//       runtimeImage: {required},
//     }
//   },
//   methods: {
//     handleSubmit(e) {
//       this.submitted = true;

//       console.log();
//       // stop here if form is invalid
//       this.$v.$touch();
//       if (this.$v.$invalid) {
//         return;
//       }

//       alert("SUCCESS!! :-)\n\n" + e);
//     }
//   },
// };
// </script>

// <style>
// .invalid-feedback {
//   color: red;
// }
// </style>